<header>
  <nav class="navbar navbar-expand-lg bg-body-dark" data-bs-theme="dark">
    <div class="container-fluid">
      <a class="navbar-brand" href="#" id = 'title-btn'>Voting App</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="/" id ='home-btn'>Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/create" id ='create-btn'>Create New Vote</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" id ='logout-btn'>Logout</a>
          </li>
          <li class="nav-item">
            <img src="">
          </li>
        </ul>
      </div>
    </div>
  </nav>
</header>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const titleBtn = document.querySelector('#title-btn') as HTMLButtonElement;
		const homeBtn = document.querySelector('#home-btn') as HTMLButtonElement;
		const createBtn = document.querySelector('#create-btn') as HTMLButtonElement;
		const logoutBtn = document.querySelector('#logout-btn') as HTMLButtonElement;

     titleBtn.addEventListener('click',() => {
      window.location.href = '/';
     })

			homeBtn.addEventListener('click', () => {
				window.location.href = '/'; 
			});
	
      function getCookie(name: string): string | undefined {
	const cookies = document.cookie.split('; ');
	console.log('All cookies:', cookies); 
	const cookie = cookies.find(cookie => cookie.startsWith(name + '='));
	console.log('Found cookie:', cookie);
	return cookie ? cookie.split('=')[1] : undefined;
}


    createBtn.addEventListener('click', async () => {
		const authToken = getCookie('auth_token'); 

		if (authToken) {
			window.location.href = '/create';
		} else {
			alert('Please log in to create a new vote');
			window.location.href = '/login';
		}
	});

  logoutBtn.addEventListener('click', async () => {
      try {
        const response = await fetch('http://localhost:3001/api/auth/logout', {
          method: 'POST',
          credentials: 'include'
        });

        window.location.href = '/login';
      } catch (error) {
        console.error('Logout failed:', error);
        alert('Logout failed. Please try again.');
      }
    });
  });
</script>
<style>
  nav{
    background-color: black;
    font-family: "VT323", monospace;
    font-size: 1.5rem;
  }

  .navbar-brand{
    font-size: 1.5rem;
  }
</style>